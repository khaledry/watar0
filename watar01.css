#login-form__name, #login-form__password, #register-form__name, #register-form__password {
    width: 57%;
    height: 23px;
    text-align: left;
    color: #333;
    font-size: .625rem;
    margin-top: -4px;
    padding: 0;
}
.users-count-label p {
    padding: 1px;
}
button#login-form__submit {
    border-color: #646D7E!important;
    font-family: el messiri,FontAwesome!important;
    position: relative;
    top: -2px;
    display: inline-block;
    border: .5px solid#ffffff6e!important;
    font-size: small;
    background-image: linear-gradient( 
90deg
 ,#646D7E0,#646D7E%,#646D7E51%,#646D7E89%,#646D7E100%);
    width: 18%;
}
.chat_pane__user_item__avatar .status {
}
.chat_pane__user_item__avatar img {
    MARGIN-RIGHT: 5PX;
    border-radius: 1.042rem;
    border: .0001px solid #ffffff !important;
    background-image: url(pic.png);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    width: 36px;
    height: 36px;
    margin-left: 1px;
    user-select: none;
    cursor: default;
    vertical-align: middle;
    font-family: serif;
    font-weight: bold;
    text-shadow: none !important;
    font-size: 15px !important;
}
.chat_pane__user_item__avatar img.avatar_bg {
    position: absolute;
    top: 0.0rem;
    left: 0.0rem;
    border: none!important;
}

.royal_login_item__name:before {
    position: absolute;
    content: "";
    background: url(https://h.top4top.io/p_1880ttjld1.png)no-repeat !important;
    margin-top: -30px;
    margin-left: -10px;
    width: 100%;
    height: 30px;
}
.royal_login_item:before {
    position: absolute;
    content: "";
    margin-top: 0px;
    margin-left: 12px;
    width: 50px;
    height: 54px;
    background: url(https://e.top4top.io/p_1880lt73v1.gif)100% 100% / 100% 100% no-repeat !important;
}
#royal_login_container .royal_login_item .royal_login_item__img {
    width: 32px;
    height: 30px;
    top: 15px;
    left: 20px;
}
.royal_login_item__img:before {
    position: absolute;
    content: "";
    margin-top: -5px;
    margin-left: -1px;
    width: 50px;
    height: 50px;
    background: url(https://e.top4top.io/p_1880lt73v1.gif)100% 100% / 100% 100% no-repeat !important;
}


#royal_login_item--2{
 background: url(https://e.top4top.io/p_18734s1391.png)100% 50% / 100% 110% no-repeat !important;
}
.royal_login_item {
 background: url(https://h.top4top.io/p_18803kgiv1.png)100% 50% / 100% 110% no-repeat !important;

}
#royal_login_container .royal_login_item. {
    width: 250px;
    border: 1px solid#f9f9f9!important;
    border-radius: 10px;
}


----------

.btn-primary:hover {
    color: #fff;
    background-color: #2c3e52;
}




.chat_pane__user_item--stars {
    display: -webkit-box;
}


div#login-btn-holder {
  visibility: hidden;
}

/* Horizontal shape for the scrollbar */
::-webkit-scrollbar {
    width: 12px;
}
/* Background color for the scrollbar */
::-webkit-scrollbar-track {
    background-color: #f4f4f4;
}
/* Color of the thumb when scrolling down */
::-webkit-scrollbar-thumb {
    background-color: #330832;
    background:  url(https://www.chabab-jo.com/images/mic_bg.gif);
    border-radius: 6px; /* Rounded corners */
    transition: background-color 0.3s ease, transform 0.3s ease; /* Transition effect */
    box-shadow: inset 0 0 0.417rem #000;
    position: relative;
    overflow: hidden;
}
/* Transition effect when hovering over the scrollbar */
::-webkit-scrollbar-thumb:hover {
    background-color: #330832; /* Dark color on hover */
    transform: scale(1.2); /* Scale effect on hover */
}

/* Vertical shape for the scrollbar */
::-webkit-scrollbar-thumb:vertical {
    height: 50px; /* Height of the thumb in vertical scrolling */
}

/* Horizontal shape for the scrollbar */
::-webkit-scrollbar-thumb:horizontal {
    width: 50px; /* Width of the thumb in horizontal scrolling */
}
div#online_users .user-container {
  margin: 10px;
  padding: 10px;
  border: 1px solid #3498db;
  border-radius: 5px;
  background-color: #ecf0f1;
  min-width: 200px;
  min-height: 100px;
  text-align: center;
  display: flex;
  flex-direction: column;
}



@keyframes colorChange {
  0% {
    background: linear-gradient(to right, black, #b311b0);
    box-shadow: none;
  }
  50% {
    background: linear-gradient(to right, black, #b311b0);
    box-shadow: none;
  }
  100% {
    background: linear-gradient(to right, #b311b0, black);
    box-shadow: none;
  }
}

div#login {
  animation: colorChange 2s infinite; /* Increase the duration to make it very slow */
  border-radius: 0;
  z-index: 20;
}



#login-btn-holder {
  margin-bottom: 0.3rem;
}

div#online_users {
   border: 0.13rem solid #330832;;
  
}

#online_users {
	height: -webkit-fill-available;
    overflow: overlay;
    width: 100%;
}



.label.label-primary {
background: #3330 url(https://www.chabab-jo.com/images/mic_bg.gif) center bottom/contain repeat padding-box;
	background-color: #330832;

}

.btn.btn-primary {
	background-color: #330832;
}

.react-tabs__tab {
    color: #330832!important;
    flex-grow: unset;
    font-size: .625rem;
    border-bottom: .0416666667rem solid #dee2e6;
}
}




p.border.border-color.label-count.label.label-primary {
    width: 58% !important;
    height: 21px;
    border: none !important;
    padding: 3px;
    font-family: jazeera,FontAwesome;
    position: absolute;
    margin-top: -20px;
    border-radius: 0 0 30px 30px !important;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    color: white!important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-top: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
}

img {
}

a.label.label-primary.login-header__label img {
    display: none;
}

h1#login-header {
    margin-bottom: 2px;
    background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    text-align: center !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
    width: 60% !important;
    height: 24px;
    border-radius: 30px 30px 0px 0px;
}

button.btn.fr.btn-success.fa.fa-refresh.login-header__refresh {
    display: none;
}

ul#tabs {
    border-bottom: 1px #5e635c solid !important;
    padding: 10px 6px 2px 1px;
    border-radius: 0;
    margin-top: 0;
    border-left: 2px solid #5e635c;
    border-left-style: solid;
    border-right: 2px solid #5e635c;
    border-right-style: solid;
    background: #ebebeb;
    background-color: rgb(235, 235, 235);
    background-image: none;
    border-top: 2px #5e635c solid;
    border-top-style: solid;
    border-radius: 5%;
    border-style: dashed;
    border-bottom-style: dashed;
    background-color: #330832;
    background-image: -webkit-linear-gradient(332deg,rgb(166 206 214/0%) 25%,transparent 25%,#2b879900 50%,rgba(255,255,255,.2) 50%,rgb(255 255 255) 75%,transparent 75%,transparent) !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 14px 0 rgb(0 0 0 / 12%), 0 -14px 14px 0px rgb(0 0 0 / 20%) !important;
}

li#react-tabs-1 {
    width: 38%;
    margin: -1px 59px 6px 4px;
    background-color: #000000;
    border: 0;
    border-top-color: currentcolor;
    border-top-style: none;
    border-right-color: currentcolor;
    border-right-style: none;
    border-right-width: 0px;
    border-bottom-color: currentcolor;
    border-bottom-style: none;
    border-left-color: currentcolor;
    border-left-style: none;
    border-radius: 7px;
    text-align: center;
    border-style: solid;
    border-right-style: solid;
    border-right: 5px solid;
    border-right-color: currentcolor;
    border-right-style: solid;
    border-right-style: dotted;
    font-family: jazeera,FontAwesome;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 -3px 1px -2px rgba(0,0,0,.2) !important;
    height: 28px;
    display: initial;
    padding: 2px 0 0 !important;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
		color: #330832!important;
}

li#react-tabs-2 {
    width: 38%;
    margin: -1px 59px 6px -13px;
}

li#react-tabs-3 {
    width: 38%;
    margin: -1px 59px 6px -13px;
}

div#guest {
    opacity: 1 !important;
    -webkit-transition: none !important;
    -o-transition: none !important;
    transition: none !important;
    width: 58% !important;
    position: absolute;
    margin: -113px 0 0 144px !important;
    height: 93px;
    border-radius: 10px 10px 20px;
    background-color: #000000;
    background-image: -webkit-linear-gradient(332deg,rgb(166 206 214/0%) 25%,transparent 25%,#2b879900 50%,rgba(255,255,255,.2) 50%,rgb(255 255 255) 75%,transparent 75%,transparent) !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
}

li#react-tabs-1 {
}

a.nav-link.active {
    height: 23px;
    padding: 5px;
    color: aliceblue;
}

a.nav-link {
    height: 23px;
    padding: 5px;
    color: white;
}



li#react-tabs-2 {
    width: 38%;
    margin: -1px 59px 6px 4px;
    background-color: #000000;
    border: 0;
    border-top-color: currentcolor;
    border-top-style: none;
    border-right-color: currentcolor;
    border-right-style: none;
    border-right-width: 0px;
    border-bottom-color: currentcolor;
    border-bottom-style: none;
    border-left-color: currentcolor;
    border-left-style: none;
    border-radius: 7px;
    text-align: center;
    border-style: solid;
    border-right-style: solid;
    border-right: 5px solid;
    border-right-color: currentcolor;
    border-right-style: solid;
    border-right-style: dotted;
    font-family: jazeera,FontAwesome;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
    height: 28px;
    display: initial;
    padding: 2px 0 0 !important;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
		color: #330832!important;
}

a.nav-link.active {
    height: 23px;
    padding: 5px;
    color: white;
}



li#react-tabs-3 {
    width: 38%;
    margin: -1px 59px 6px 4px;
    background-color: #000000;
    border: 0;
    border-top-color: currentcolor;
    border-top-style: none;
    border-right-color: currentcolor;
    border-right-style: none;
    border-right-width: 0px;
    border-bottom-color: currentcolor;
    border-bottom-style: none;
    border-left-color: currentcolor;
    border-left-style: none;
    border-radius: 7px;
    text-align: center;
    border-style: solid;
    border-right-style: solid;
    border-right: 5px solid;
    border-right-color: currentcolor;
    border-right-style: solid;
    border-right-style: dotted;
    font-family: jazeera,FontAwesome;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
    height: 28px;
    display: initial;
    padding: 2px 0 0 !important;
    background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
	color: #330832!important;
}



img.login-banner__img {
    max-height: 100%;
}

a.login-btn-holder__btn.fa.fa-facebook.btn.btn-primary {
    text-decoration: dotted;
    display: inline-block;
    margin-right: 1.5px !important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-top: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
    border-radius: 70px 70px 0px 0px;
    transform: matrix(1, 0, 0, 1, -56, 14);
    width: 24%;
    margin: 2px;
    height: 23px;
    padding: 2px;
    background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    background-color: #330832!important;
}

a.login-btn-holder__btn.fa.fa-music.btn.btn-default {
	text-decoration: dotted;
    color: #fff;
    display: inline-block;
    margin-right: 1.5px !important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
    border-radius: 0px 0px 70px 70px;
    transform: matrix(1, 0, 0, 1, -152, 132);
    width: 24%;
    margin: 2px;
    height: 23px;
    padding: 0px;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    border-top: 0.5px solid #330832!important;
}

marquee.marquee {
    border: 0px dotted #f0ad4e;
    text-align: center;
    border-bottom: 0 solid #fff !important;
    border-right: .5px solid #fff !important;
    border-top: .5px solid #fff !important;
    border-left: .5px solid #fff !important;
    height: 20px;
    background-color: #434343 !important;
    margin-bottom: -3px;
    margin-right: -1px;
    padding: 5px 0 0;
    line-height: 10px;
    margin-top: 128px;
    border-radius: 30px 30px 0px 0px;
    width: 100%;
    position: absolute;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    color: white!important;
    box-shadow: 0 0 2px 0 rgb(0 0 0 / 43%);
}

a.login-btn-holder__btn.fa.fa-user.btn.btn-default {
    text-decoration: dotted;
    color: #fff;
    display: none;
    margin-right: 1.5px !important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
    border-radius: 0px 0px 70px 70px;
    transform: matrix(1, 0, 0, 1, -59, 130);
    width: 24%;
    margin: 2px;
    height: 23px;
    padding: 2px;
    background: black;
}

a.login-btn-holder__btn.fa.fa-star-half-o.btn.btn-primary {
    text-decoration: dotted;
    color: #fff;
    display: none;
    margin-right: 1.5px !important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-top: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
    border-radius: 70px 70px 0px 0px;
    transform: matrix(1, 0, 0, 1, 37, 12);
    width: 23%;
    margin: 2px;
    height: 23px;
    padding: 2px;
}

div#login-btn-holder {
    margin-top: -27px;
}

span#connection-state-on {
    margin-top: -56px!important;
}

span#connection-state-on {
}

div#connection_container {
    margin-top: -160px;
}
#youcam-copyrights a {
  color: inherit; /* يحافظ على لون الرابط الافتراضي */
  text-decoration: none; /* يزيل تأثير التزيين الافتراضي للرابط */

}

p#youcam-copyrights {
    margin-left: -238px!important;
	 margin: 10px 5px; /* قيمة يمكن تعديلها حسب الحاجة */
    text-decoration: dotted;
    display: inline-block;
    margin-right: 19.5px !important;
    border-bottom: 0 solid #fff !important;
    border-right: 0.5px solid #fff !important;
    border-top: 0.5px solid #fff !important;
    border-left: 0.5px solid #fff !important;
    font-family: jazeera,FontAwesome;
    font-size: 12px !important;
    text-align: center !important;
    color: #fff !important;
    height: 20px;
    border-radius: 0px 0px 30px 30px;
    margin-top: 30px;
    padding: 3px!important;
    width: 389px;
    right: 25px !important;
    transform: matrix(1, 0, 0, 1, 238, 0);
    background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    color:#b311b000!important;
    box-shadow: 0 0 2px 0 rgb(0 0 0 / 43%);
}
div#login {
    border-radius: 30px 30px 0px 0px;
    box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 1px 8px #330832;
    border: 1px solid #cbcbcb;
}

img.state_active {
    border-radius: 5px;
    border: 1px solid #6f6f6f;
}

input#guest-form__name {
    margin: 0 0 5px -5.5px !important;
    margin-top: 0px;
    margin-left: -5.5px;
    width: 97%;
    height: 28px;
    border: 1px solid #94adc1;
    border-top-color: rgb(148, 173, 193);
    border-top-style: solid;
    border-top-width: 1px;
    border-right-color: rgb(148, 173, 193);
    border-right-style: solid;
    border-right-width: 1px;
    border-bottom-color: rgb(148, 173, 193);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-left-color: rgb(148, 173, 193);
    border-left-style: solid;
    border-left-width: 1px;
    border-radius: 0;
    text-align: center;
    border-style: solid;
    border-right: 7px solid;
    border-right-color: currentcolor;
    border-right-width: 7px;
    border-left: 7px solid;
    border-left-color: currentcolor;
    border-left-width: 7px;
    border-color: #5e635c;
    border-top-color: rgb(94, 99, 92);
    border-bottom-color: rgb(94, 99, 92);
    border-top: 1px solid #5e635c !important;
    border-bottom: 1px solid #5e635c !important;
    padding: 0 !important;
    margin-left: 4px !important;
    border-radius: 7px;
    margin-top: 15px !important;
    border-width: medium;
    border-top-width: medium;
    border-bottom-width: medium;
    background-color: #f3f3f3;
}

form#login-form {
    opacity: 1 !important;
    -webkit-transition: none !important;
    -o-transition: none !important;
    transition: none !important;
    width: 58% !important;
    position: absolute;
    margin: -113px 0 0 144px !important;
    height: 93px;
    border-radius: 10px 10px 20px;
    background-color: #330832;
    background-image: -webkit-linear-gradient(332deg,rgb(166 206 214/0%) 25%,transparent 25%,#2b879900 50%,rgba(255,255,255,.2) 50%,rgb(255 255 255) 75%,transparent 75%,transparent) !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
}

form#register-form {
    opacity: 1 !important;
    -webkit-transition: none !important;
    -o-transition: none !important;
    transition: none !important;
    width: 58% !important;
    position: absolute;
    margin: -113px 0 0 144px !important;
    height: 93px;
    border-radius: 10px 10px 20px;
    background-color: #330832;
    background-image: -webkit-linear-gradient(332deg,rgb(166 206 214/0%) 25%,transparent 25%,#2b879900 50%,rgba(255,255,255,.2) 50%,rgb(255 255 255) 75%,transparent 75%,transparent) !important;
    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%), 0 -3px 1px -2px rgb(0 0 0 / 20%) !important;
}



input#login-form__name {
    margin-top: 0px;
    margin-left: -5.5px;
    width: 97%;
    height: 28px;
    border: 1px solid #94adc1;
    border-top-color: rgb(148, 173, 193);
    border-top-style: solid;
    border-top-width: 1px;
    border-right-color: rgb(148, 173, 193);
    border-right-style: solid;
    border-right-width: 1px;
    border-bottom-color: rgb(148, 173, 193);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-left-color: rgb(148, 173, 193);
    border-left-style: solid;
    border-left-width: 1px;
    border-radius: 0;
    text-align: center;
    border-style: solid;
    border-right: 7px solid;
    border-right-color: currentcolor;
    border-right-width: 7px;
    border-left: 7px solid;
    border-left-color: currentcolor;
    border-left-width: 7px;
    border-color: #5e635c;
    border-top-color: rgb(94, 99, 92);
    border-bottom-color: rgb(94, 99, 92);
    border-top: 1px solid #5e635c !important;
    border-bottom: 1px solid #5e635c !important;
    padding: 0 !important;
    margin-left: 4px !important;
    border-radius: 7px;
    margin-top: 5px !important;
    border-width: medium;
    border-top-width: medium;
    border-bottom-width: medium;
    background-color: #f3f3f3;
}

input#login-form__password {
    margin: 0 0 2px -5.5px !important;
    margin-top: 0px;
    margin-left: -5.5px;
    width: 97%;
    height: 28px;
    border: 1px solid #94adc1;
    border-top-color: rgb(148, 173, 193);
    border-top-style: solid;
    border-top-width: 1px;
    border-right-color: rgb(148, 173, 193);
    border-right-style: solid;
    border-right-width: 1px;
    border-bottom-color: rgb(148, 173, 193);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-left-color: rgb(148, 173, 193);
    border-left-style: solid;
    border-left-width: 1px;
    border-radius: 0;
    text-align: center;
    border-style: solid;
    border-right: 7px solid;
    border-right-color: currentcolor;
    border-right-width: 7px;
    border-left: 7px solid;
    border-left-color: currentcolor;
    border-left-width: 7px;
    border-color: #5e635c;
    border-top-color: rgb(94, 99, 92);
    border-bottom-color: rgb(94, 99, 92);
    border-top: 1px solid #5e635c !important;
    border-bottom: 1px solid #5e635c !important;
    padding: 0 !important;
    margin-left: 4px !important;
    border-radius: 7px;
    margin-top: -3px !important;
    border-width: medium;
    border-top-width: medium;
    border-bottom-width: medium;
    background-color: #f3f3f3;
}

input#register-form__name {
    margin-top: 0px;
    margin-left: -5.5px;
    width: 97%;
    height: 28px;
    border: 1px solid #94adc1;
    border-top-color: rgb(148, 173, 193);
    border-top-style: solid;
    border-top-width: 1px;
    border-right-color: rgb(148, 173, 193);
    border-right-style: solid;
    border-right-width: 1px;
    border-bottom-color: rgb(148, 173, 193);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-left-color: rgb(148, 173, 193);
    border-left-style: solid;
    border-left-width: 1px;
    border-radius: 0;
    text-align: center;
    border-style: solid;
    border-right: 7px solid;
    border-right-color: currentcolor;
    border-right-width: 7px;
    border-left: 7px solid;
    border-left-color: currentcolor;
    border-left-width: 7px;
    border-color: #5e635c;
    border-top-color: rgb(94, 99, 92);
    border-bottom-color: rgb(94, 99, 92);
    border-top: 1px solid #5e635c !important;
    border-bottom: 1px solid #5e635c !important;
    padding: 0 !important;
    margin-left: 4px !important;
    border-radius: 7px;
    margin-top: 5px !important;
    border-width: medium;
    border-top-width: medium;
    border-bottom-width: medium;
    background-color: #f3f3f3;
}

input#register-form__password {
    margin-top: 0px;
    margin-left: -5.5px;
    width: 97%;
    height: 28px;
    border-top-style: solid;
    border-top-width: 1px;
    border-right-color: rgb(148, 173, 193);
    border-right-style: solid;
    border-right-width: 1px;
    border-bottom-color: rgb(148, 173, 193);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-left-color: rgb(148, 173, 193);
    border-left-style: solid;
    border-left-width: 1px;
    border-radius: 0;
    text-align: center;
    border-style: solid;
    border-right: 7px solid;
    border-right-color: currentcolor;
    border-right-width: 7px;
    border-left: 7px solid;
    border-left-color: currentcolor;
    border-left-width: 7px;
    border-color: #5e635c;
    border-top-color: rgb(94, 99, 92);
    border-bottom-color: rgb(94, 99, 92);
    border-top: 1px solid #5e635c !important;
    border-bottom: 1px solid #5e635c !important;
    padding: 0 !important;
    margin-left: 4px !important;
    border-radius: 7px;
    margin-top: -3px !important;
    border-width: medium;
    border-top-width: medium;
    border-bottom-width: medium;
    margin: 0 0 2px 4.5px !important;
    background-color: #f3f3f3;
}

button#register-form__submit {
    top: 67px;
    width: 43%;
    right: 59px;
    height: 25px;
    padding: 0 0 3px;
    border-radius: 10% !important;
    position: inherit;
    border-color: #fff;
    font-family: jazeera,FontAwesome;
    margin-left: 59px;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    color: white;
}

button#login-form__submit {
    top: 67px;
    width: 43%;
    right: 59px;
    height: 25px;
    padding: 0 0 3px;
    border-radius: 10% !important;
    position: inherit;
    border-color: #fff;
    font-family: jazeera,FontAwesome;
    margin-left: 40px;
     background-image: radial-gradient(circle,#330832,#000000,#b311b0) !important;
    color: white;
}

button#guest-form__submit {
    top: 67px;
    width: 43%;
    right: 59px;
    height: 25px;
    padding: 1px;
    border-radius: 10% !important;
    position: inherit;
    font-family: jazeera,FontAwesome;
    margin-left: 59px;
        background-image: radial-gradient(circle,#330832,#330832,#b311b0) !important;
    color: white;
    border: 0.5px solid #000;
}




div#online_users {
    background-color: #f3f3f3;
}





label#login-form__hidden-label {
    position: fixed;
    top: 9.333rem;
    margin-left: 0.033rem;
    margin-top: 0.167rem!important;
    float: right;
    background-image: url(https://j.top4top.io/p_2311upben1.gif);
    font-size: 0;
    z-index: 33;
    min-height: 1.292rem;
    padding-left: 0.833rem;
    margin-bottom: 0;
    width: 0.875rem;
    font-weight: 400;
    cursor: pointer;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 50%;
}
 
 
 
 
 

        #chat__body__wall_creator_pane .chat_pane__container__posts 

        .seobqsh {
            position: absolute;
            right: 0px;
        }

        div#seobaqer {
            background-color: #353541;
            margin-left: 0px;
            border-radius: 5px;
            padding: 2px 0 1px;
            box-shadow: 1px 2px 4px 2px #c5c5c5;
            position: relative;
            width: 130px;
            height: 175px;
            margin-top: -240px;
            position: relative;
            z-index: 34;
            display: none;
        }

      
        .chat_pane__room_item[data-id="137"] h5.chat_pane__room_item__description {
            height: 107px;
            padding: 31px 15px 16px 53px;
        }

        .chat_pane__room_item[data-id="137"] {
            background-image: linear-gradient(-225deg, rgb(164, 164, 164) 0%, rgba(255, 0, 143, 0) 29%, rgba(151, 101, 127, 0.04) 67%, rgb(189, 189, 189) 100%);
            border-radius: 20px;
        }






        .chat_pane__room_item[data-id="137"] h5.chat_pane__room_item__name {
            text-transform: uppercase;
            -webkit-text-fill-color: transparent;
            animation: textclip 2s linear infinite;
            font-size: 20px !important;
            font-style: normal;
            font-family: sans-serif;
            background-image: url(https://g.top4top.io/p_24526ipwr1.gif);
            -webkit-background-clip: text;
            color: transparent !important;
            background-size: 100% 100%;
            margin-top: -2px;
            margin-left: 5px;
        }

        .chat_pane__room_item[data-id="137"] .radius {
            height: 45px;
            width: 45px;
            border-radius: 50px;
        }

        .chat_pane__room_item[data-id="137"] img.chat_pane__room_item--lock {
            top: 35px;
            left: 269px !important;
        }

        .chat_pane__room_item[data-id="137"] span.chat_pane__room_item__users.corner.fa.fa-user.label.label-primary.fr {
            top: 101px;
            width: 97%;
            text-align: center;
            border-radius: 52px !important;
            background-color: #737373;
        }

        body#room-137 .public_message {
            background-color: #e3e3e333!important;
            border-radius: 14px;
            margin: 2px;
        }

        body#room-137 .public_message__avatar img {
            MARGIN-RIGHT: 5PX;
            border-radius: 1px;
            border: 0.0001px solid #dedbdb!important;
            padding: 0;
            width: 46px;
            height: 46px;
            margin-left: 0;
            background-image: url(pic.png);
            border-radius: 50px;
        }

لايكك /// 
#popup_container {
    marginLeft: 32px;
}

.popup {
    min-width: 180px;
    max-width: 260px;
    border: 2px solid #f52525; /* اللون الذهبي */
    z-index: 2000;
    background-color: #e8ebef;
    position: absolute;
    top: 30%;
    padding: 10px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* ظل للصندوق */
    animation: pulse 1.5s infinite; /* تحريك الصندوق */

    /* نقاط داخل الصندوق */
    background-image: radial-gradient(circle, #ffcc00 1px, transparent 1px),
                      radial-gradient(circle, rgba(255, 255, 255, 0.8) 2px, transparent 2px); /* نقاط بيضاء للإضاءة */
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px; /* تحديد موقع النقاط */
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}


/////////////////////////////////
#chat__body__wall_pane {
  overflow: hidden;
  position: relative; /* إضافة هذا لضبط النسبية للأمان */
  /* باقي الخصائص... */
}

.chat_pane__container__banner {
  width: 100%; /* أو أي قيمة تراها مناسبة */
  height: 50px; /* أو أي قيمة تراها مناسبة */
  overflow: hidden; /* منع النص من الخروج */
}

.chat_pane__container__banner p {
    width: 55.5rem;
    border-radius: initial;
    background-image: radial-gradient(circle,var(--danger),var(--border-color),var(--border-color)) !important;
    white-space: pre;
    display: inline-block;
    line-height: 1.5;
    margin: 0;
    animation: scroll-left 8s linear infinite;
    left: 0;
}

@keyframes scroll-left {
  from {
    transform: translateX(-70%);
  }
  to {
    transform: translateX(-1%);
  }
}

/* باقي الأنماط... */

--------------------------------


/* حالة الملف الشخصي */
.user_profile__body__status {
    width: 80%;
    padding: 10px;
    text-align: center;
    outline-offset: -6px;
    background: hsl(0deg 0% 0% / 0%);
    border-radius: 5px;
    border: 1px solid #2c2c2c;
    box-shadow: 8px 3px 5px -3px #000;
    margin-bottom: 24px;
    margin-left: 40px;
    overflow: auto;
    height: 79px; /* تم إزالة السطر المكرر */
    font-size: small;
}

/* عنوان الرسائل */
h3.label.label-primary.chat_pane__header__title {
    color: #fff;
    font-size: .6rem;
    font-weight: 700;
    word-wrap: break-word;
    text-align: center;
    padding: 4px;
    margin: 0 0 20px;
    border-radius: 59px 0 68px 0;
    box-shadow: 0 5px 25px #fff;
    width: 122px;
    margin-left: 79px;
    background: linear-gradient( -45deg , #000, #000, #8f8157, #000);
    background-size: 400% 400%;
    animation: abqsh 10s ease infinite;
}

.public_message__avatar img {
    border: 1px solid #dedbdb;
    padding: 1px;
    border-radius: 50%; /* تحديد الشكل الدائري */
}


/////////////////
div#add-user {
    position: absolute;
    bottom: 5em;
    right: 0.1em;
    z-index: 5;
}

h4.modal-title {
    text-align: center;
    font-variant: JIS90;
    color: #fff!important;
    font-size: .6rem;
    font-weight: 900;
    word-wrap: break-word;
    padding: 4px;
    border-radius: 59px 0 68px 0;
    width: 130px !important;
    background: linear-gradient(-45deg,#cc31cc,pink,#4997d0,#4caf50);
    background-size: 400% 400%;
    margin-left: 100px;
}

.modal-content {
    top: -4px;
    padding: 5px;
    border-radius: 10px !important;
    box-shadow: 7px 7px 50px #000;
    border: 5px solid hsla(0,0%,100%,.8588235294117647)!important;
    background: hsla(0,0%,100%,.8588235294117647)!important;
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
    pointer-events: auto;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid rgba(0,0,0,.2);
    outline: 0;
}

.modal-header {
    position: relative;
    padding: 0.1rem;
    width: 100%;
    height: 35px;
    border-radius: 5px;
    text-align: center;
    background-color: #dee2e6!important;
    border: 1px solid #212529;
    top: -2px;
    background-image: repeating-linear-gradient(45deg,rgba(0,0,0,.8),#212529 100px ,transparent 0,transparent 200px ),repeating-linear-gradient(-45deg,rgba(0,0,0,.9),#212529 100px ,transparent 0,#f8f9fa 200px ) !important;
}

#add-user img {
    border-radius: 50%;
    width: 60px;
    height: 60px;
    border: 3px solid #fff;
    box-shadow: 4px 2px 3px;
    cursor: pointer;
}

/* Add other styles as needed */


---------
#wall_post__body{
    width: 95%;
    background: repeating-linear-gradient(45deg,rgba(255,255,255,.8),#fff 100px,#ffffffb0 0,#fff6f699 200px),repeating-linear-gradient(-45deg,rgba(255,255,255,.5),rgba(255,255,255,.93) 100px,#2c3e52 0,#ffffffe6 200px);
    color: #0f0202;
    padding: 2px 1px;
    left: 6px;
    border-radius: 0 14px;
    box-shadow: 0 0 10px 0 #f60000eb;
}
.wall_post__body__smile .count {
    position: absolute;
    bottom: -11px;
    right: .5rem;
    font-size: 10px;
    color: #fff;
    border-radius: 5px;
    border: 2px solid #03add8;
    background: #03add8;
    width: 22px;
    height: 15px;
    left: 8px;
}

.wall_post__body__smile .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.917rem 0.417rem 0.833rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.167rem;
            }
.wall_post__body {
    font-size: .6rem;
    text-align: center;
    padding: 3.2em;
    margin: 0 0 0.2em;
    font-weight: 700;
    word-wrap: break-word;
box-shadow: 0rem 0rem 0.125rem 0.125rem;
}

           .wall_post__footer .btn {
    box-shadow: 0rem 0rem 0.292rem 0rem #000 !important;
    position: relative;
    top: 0;
    left: -0.833rem;
    border-radius: 0 0.583rem 0 0.583rem;
    transition: transform 0.3s ease;
}

.wall_post__footer .btn:hover {
    animation: rotate 1s linear infinite; /* دوران دائم عند التحويل */
}

@keyframes rotate {
    from {
        transform: rotate(0deg); /* الزاوية الأولى (0 درجة) */
    }
    to {
        transform: rotate(360deg); /* الزاوية الثانية (360 درجة) */
    }
}


            .wall_post__footer {
                HEIGHT: 40PX;
            }

            .wall_post__footer {
                padding: 0.2em;
                height: 1.75rem !important;
                width: 95%;
                margin-left: 0.208rem;
                box-shadow: 0rem 0rem 0.125rem 0.125rem;
                border-radius: 0 0.583rem 0 0.583rem;
                margin-bottom: 0.833rem;
                position: relative;
                top: 0.708rem;
            }

            .wall_post__body__comments .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.208rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.167rem;
            }

            .wall_post__body__comments.btn-primary {
                background: #000!important;
                box-shadow: none !important;
            }

            .wall_post__body__smile {
                position: relative;
                background-size: cover;
                background-repeat: no-repeat;
                margin-top: .1rem!important;
                border-radius: 2.083rem;
                margin-left: -0.208rem!important;
                margin-right: 0.5rem!important;
            }

            .wall_post__body__comments,.wall_post__body__smile {
                width: 1.167rem;
                height: 1.167rem;
                padding: 0!important;
                box-shadow: 0 0 0.417rem 0 #000 !important;
                border-radius: 0.125rem;
                margin-top: -0.042rem !important;
            }

            .wall_post__body__comments {
                margin: -0.042rem!important;
                top: .1rem!important;
                left: 6.875rem!important;
                border: 0 solid #fff!important;
            }

            .wall_post__body__remove {
                left: 0.208rem!important;
            }

            button.wall_post__body__remove.fr.btn.btn-danger.fa.fa-times {
                margin-top: 0.333rem;
            }

            .bakdadi1995Programmer {
                display: none;
            }

            <a {
                display: none;
            }

         
            .chat_pane__user_item.hidden .status.state_active {
                background-color: #2196f3;
            }

            .wall_post__body__smile .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.208rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.333rem;
            }
.wall_post {
    width: 95%;
    background: repeating-linear-gradient(45deg,rgba(255,255,255,.8),#fff 100px,#ffffffb0 0,#fff6f699 200px),repeating-linear-gradient(-45deg,rgba(255,255,255,.5),rgba(255,255,255,.93) 100px,#2c3e52 0,#ffffffe6 200px);
    color: #0f0202;
    left: 0.5rem;
    padding: 2px 1px;
    border-radius: 0 14px;
    box-shadow: 0 0 10px 0 #330832;
}


.img-thumbnail {
    padding: .25rem;
    background-color: #dee2e600;
    border: 1px solid #dee2e600;
    border-radius: .25rem;
    max-width: 100%;
    height: auto;
}


اون لاين شات
////////////////////////////////////////////////

#online_users {
    margin-bottom: 0;
    width: 100%;
    /* ... أي خصائص تصميم إضافية لعنصر #online_users */
}

#online_users .chat_pane__user_item {
    position: relative;
    background: #fff;
    padding: 0 .05rem;
    cursor: pointer;
    margin: 0 .05rem -1px;
    text-align: left;
    background-color: #fff;
    border-radius: 0px!important;
    width: 99%;
    /* ... أي خصائص تصميم إضافية لعناصر المستخدمين الأون لاين */
}

#online_users .chat_pane__user_item__status {
    font-size: .6rem;
    color: #888;
    width: 100%;
    margin-top: .15rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 6;
    -webkit-box-orient: vertical;
    text-align: -webkit-center;
    /* ... أي خصائص تصميم إضافية لحالة المستخدم (متصل أو غير متصل) */
}

#online_users .chat_pane__user_item__avatar {
    margin: 2px 3px;
    /* ... أي خصائص تصميم إضافية لصور الرمز الشخصي */
}

#online_users .fa-group:before,
#online_users .fa-users:before {
    content: "\f0c0";
    font-weight: 800;
    visibility: initial;
    /* ... أي خصائص تصميم إضافية لرمز المجموعة */
}

#online_users .toggle_notifications__enable:before,
#online_users .toggle_notifications__disable:before,
#online_users .toggle_private__enable:before,
#online_users .toggle_private__disable:before {
    /* ... أي خصائص تصميم إضافية لإعدادات الحالة (Open/Closed) */
}
#online_users .toggle_notifications__enable:before,
#online_users .toggle_notifications__disable:before,
#online_users .toggle_private__enable:before,
#online_users .toggle_private__disable:before {
    content: "\f057";
    font-size: 16px;
    float: left;
    left: -4px;
    top: -4px;
    color: #fefffc;
    cursor: pointer;
    border: 1px solid #000;
    width: 80px;
    line-height: 20px;
    position: relative;
    border-radius: 0 45px 37px 40px!important;
    background-color: #ff0000;
    padding: 3px;
    /* ... أي خصائص تصميم إضافية لإعدادات الحالة (Open/Closed) */
}

#online_users .chat_pane__user_item__flag {
    position: absolute;
    top: .05em;
    right: .05em;
    transform: rotate(0deg);
    height: 14px;
    width: 13px!important;
    margin-top: 1px;
    /* ... أي خصائص تصميم إضافية للعلم أو الرمز الصغير */
}

#online_users .chat_pane__user_item__status__hash {
    position: absolute;
    right: .7rem;
    top: 1rem;
    font-size: 75%!important;
    /* ... أي خصائص تصميم إضافية لعرض رمز هاش أو إضافة إلى حالة المستخدم */
}

#online_users .chat_pane__user_item {
    margin: -20px 0.05rem;
    text-align: end;
    margin-left: 2px;
    margin-bottom: 12px;
    color: #00000061;
    font-family: 'fanni';
    overflow-x: hidden;
    overflow: hidden;
    width: 99%;
    margin-top: 5px;
    border-radius: 3px;
    border-color: #0096ae40;
    background-image: -webkit-linear-gradient(45deg, #e6e6fa00 25%, lavender 25%, lavender 50%, lavender 50%, lavender 75%, lavender 75%, lavender);
    background-size: cover; /* يمكن تغييرها حسب الحاجة */
}


#online_users .chat_pane__user_item:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url(/uploads/user-bg/xxjqyb1iw0jsmgat.jpg);
    z-index: -1;
}


#online_users .chat_pane__user_item__status {
    text-overflow: ellipsis;
    color: #000!important;
    margin-bottom: 1px;
    font-family: serif!important;
    max-height: 40%;
    -webkit-line-clamp: 6;
    -webkit-box-orient: vertical;
}


#online_users .login-btn-holder__btn.btn.btn-primary.fhd {
    position: relative;
    margin: 0;
    width: 63px;
    height: 22px;
    top: -2px;
    color: #fff;
    display: inline-block;
    padding: 0 2px;
    font-family: el messiri, FontAwesome!important;
    border-radius: 4px;
    border-right: 8px #000 solid!important;
    border-right-style: double!important;
    border-left: 9px #000 solid!important;
    border-left-style: double!important;
}

#online_users a.border-color.login-btn-holder__btn.fa.fa-star-half-o.btn.btn-primary04::before {
    text-align: unset;
    content: "\f12d";
}

/* ... أي خصائص تصميم إضافية للعناصر الأخرى ضمن #online_users */

حجم الحاله
#online_users .chat_pane__user_item {
    line-height: 1.2;
    height: 35%; /* Adjust the height percentage to your preference */
    /* ... other styles ... */
}




-----------------
اعلان /////
 div#chat__body__messages_container {
                background: #ffffff !important;
            }

            .public_message.public_message_ad {
                outline: auto;
                outline-offset: 0;
                border-radius: 0.25rem;
                box-shadow: #000000 0rem 0rem 0.792rem inset;
            }


            .public_message__content {
                color: #212529;
                margin: 0;
                padding-bottom: 2PX;
                font-size: .62rem;
            }
   .public_message__content {
                color: #212529;
                margin: 0;
                padding-bottom: 2PX;
                font-size: .62rem;
            }
.public_message_ad .public_message__content {
                color: #00f;
                font-size: .6rem;
            }
            
            .public_message__time {
                font-size: .55rem;
                color: #888;
                position: absolute;
                top: 1.1em;
                right: 0.3em;
            }
 .public_message__content {
                color: #212529;
                margin: 0;
                padding-bottom: 2PX;
                font-size: .62rem;
            }

            .public_message__avatar {
                float: left;
                margin: 0;
                cursor: pointer;
            }

            .username__wrapper {
    background: url(https://www.chabab-jo.com/images/mic_bg.gif);
    background-size: 200px 10px;
                margin-top: 0.042rem;
                padding: 0.088rem 0.333rem;
                border-radius: 0.292rem;
                display: inline-block;
                white-space: nowrap;
                overflow: hidden!important;
                text-overflow: ellipsis;
                max-width: 70%;
                margin-left: -1PX;
                direction: initial;
                -webkit-user-select: none;
                font-size: 0.625rem;
                padding: 0.042rem 0.333rem;
                margin-top: 0.083rem;
                max-width: 70%;
            }
.username__wrapper {
    font-size: 0.6rem;
    text-align: center;
    padding: 0.2em;
    margin: 0 0 0.2em;
    font-weight: 700;
    word-wrap: break-word;
    box-shadow: 0rem 0rem 0.05rem 0.05rem;
    border-radius: 0 0.2rem 0 0.2rem;
}
            .public_message__time {
                font-size: .55rem;
                color: #888;
                position: absolute;
                top: 1.1em;
                right: 0.3em;
            }

            .chat_pane__room_item--inline {
                border-radius: 0.208rem;
                cursor: pointer;
                font-size: .600rem;
                padding: .1rem;
                max-width: 7.5rem;
                min-width: 2.5rem;
            }

            .public_message_ad .public_message__content {
                color: #00f;
                font-size: .6rem;
            }

            div#chat__body__live-pane {
                overflow: hidden;
            }

            #online_users span.username__wrapper {
                margin-top: 0.042rem;
                padding: 0.083rem 0.333rem;
                max-width: 100%;
            }

            #hg-pic-cont.hg-transition {
                max-height: 90vh;
                transform: scale(1.1) !important;
            }

            .public_message.public_bot_brb_message {
                background: bisque !important;
            }

            #chat__body__message-input #main-footer-top-mic {
                display: none !important;
            }

/* Transition effect when hovering over the scrollbar */
::-webkit-scrollbar-thumb:hover {
    background-color: #330832; /* Dark color on hover */
    transform: scale(1.2); /* Scale effect on hover */
}

/* Vertical shape for the scrollbar */
::-webkit-scrollbar-thumb:vertical {
    height: 50px; /* Height of the thumb in vertical scrolling */
}

/* Horizontal shape for the scrollbar */
::-webkit-scrollbar-thumb:horizontal {
    width: 50px; /* Width of the thumb in horizontal scrolling */
}

/* White dots inside the thumb */
@keyframes movingDots {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(10px);
    }
}

/* Two small white dots inside the thumb */
::-webkit-scrollbar-thumb::before,
::-webkit-scrollbar-thumb::after {
    content: '';
    position: absolute;
    width: 2px; /* Smaller width for the dots */
    height: 2px; /* Smaller height for the dots */
    background-color: white;
    border-radius: 50%;
    animation: movingDots 1s linear infinite;
}

/* Position of the first dot inside the thumb */
::-webkit-scrollbar-thumb::before {
    left: 4px;
}

/* Position of the second dot inside the thumb */
::-webkit-scrollbar-thumb::after {
    left: 8px;
}



#online_users .user-container {
  margin: 10px;
  padding: 10px;
  border: 1px solid #3498db;
  border-radius: 5px;
  background-color: #ecf0f1;
  min-width: 200px;
  min-height: 100px;
  text-align: center;
  display: flex;
  flex-direction: column;
}



@keyframes colorChange {
  0% {
    background: linear-gradient(to right, black, #b311b0);
    box-shadow: none;
  }
  50% {
    background: linear-gradient(to right, black, #b311b0);
    box-shadow: none;
  }
  100% {
    background: linear-gradient(to right, #b311b0, black);
    box-shadow: none;
  }
}


/////////////////////////////////

/* تحسينات الكود */

/* قاعدة الصورة في الرسالة */
#chat__body__wall_creator_pane {

}
.chat_pane__container__posts {
}
.chat_pane__container__post .grade {
    display: inline-block;
    width: 30px;
    text-align: center;
    font-size: 26px;
    color: #ffffff;
    background-image: url(https://flyclipart.com/thumb2/winner-ribbon-transparent-473744.png);
    background-size: 103% 120%;
    background-repeat: no-repeat;
}
.chat_pane__container__banner {
    font-size: .6rem;
    font-weight: 700;
    background: linen;
    color: #a72a2a;
    text-align: center;
    padding: .6em .2em;
}
/* حالة نشطة للمستخدم */
.chat_pane__user_item.hidden .status.state_active {
    background-color: #2196f3;
}


/* عداد التفاعلات في الرسالة */
.wall_post__body__smile .count {
    position: absolute;
    bottom: -11px;
    right: .5rem;
    font-size: 10px;
    color: #fff;
    border-radius: 5px;
    border: 2px solid #03add8;
    background: #03add8;
    width: 22px;
    height: 15px;
    left: 8px;
}

/* حالة الملف الشخصي */
.user_profile__body__status {
    width: 80%;
    padding: 10px;
    text-align: center;
    outline-offset: -6px;
    background: hsl(0deg 0% 0% / 0%);
    border-radius: 5px;
    border: 1px solid #2c2c2c;
    box-shadow: 8px 3px 5px -3px #000;
    margin-bottom: 24px;
    margin-left: 40px;
    overflow: auto;
    height: 79px; /* تم إزالة السطر المكرر */
    font-size: small;
}

/* عنوان الرسائل */
h3.label.label-primary.chat_pane__header__title {
    color: #fff;
    font-size: .6rem;
    font-weight: 700;
    word-wrap: break-word;
    text-align: center;
    padding: 4px;
    margin: 0 0 20px;
    border-radius: 59px 0 68px 0;
    box-shadow: 0 5px 25px #fff;
    width: 122px;
    margin-left: 79px;
    background: linear-gradient( -45deg , #000, #000, #8f8157, #000);
    background-size: 400% 400%;
    animation: abqsh 10s ease infinite;
}

/* حاوية الرسائل بحدود */
.chat_pane__container.border {
    padding: 1px;
    border-radius: 10px;
    box-shadow: 3px 3px 40px #000;
    border: 3px solid hsla(0,0%,100%,.8588235294117647);
    background: hsla(0,0%,100%,.8588235294117647);
}

.public_message__avatar img {
    border: 1px solid #dedbdb;
    padding: 1px;
    border-radius: 50%; /* تحديد الشكل الدائري */
}


/////////////////
div#add-user {
    position: absolute;
    bottom: 5em;
    right: 0.1em;
    z-index: 5;
}

h4.modal-title {
    text-align: center;
    font-variant: JIS90;
    color: #fff!important;
    font-size: .6rem;
    font-weight: 900;
    word-wrap: break-word;
    padding: 4px;
    border-radius: 59px 0 68px 0;
    width: 130px !important;
    background: linear-gradient(-45deg,#cc31cc,pink,#4997d0,#4caf50);
    background-size: 400% 400%;
    margin-left: 100px;
}

.modal-content {
    top: -4px;
    padding: 5px;
    border-radius: 10px !important;
    box-shadow: 7px 7px 50px #000;
    border: 5px solid hsla(0,0%,100%,.8588235294117647)!important;
    background: hsla(0,0%,100%,.8588235294117647)!important;
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
    pointer-events: auto;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid rgba(0,0,0,.2);
    outline: 0;
}

.modal-header {
    position: relative;
    padding: 0.1rem;
    width: 100%;
    height: 35px;
    border-radius: 5px;
    text-align: center;
    background-color: #dee2e6!important;
    border: 1px solid #212529;
    top: -2px;
    background-image: repeating-linear-gradient(45deg,rgba(0,0,0,.8),#212529 100px ,transparent 0,transparent 200px ),repeating-linear-gradient(-45deg,rgba(0,0,0,.9),#212529 100px ,transparent 0,#f8f9fa 200px )!important;
}

#add-user img {
    border-radius: 50%;
    width: 60px;
    height: 60px;
    border: 3px solid #fff;
    box-shadow: 4px 2px 3px;
    cursor: pointer;
}

/* Add other styles as needed */


////////// لون الحائط
.wall_post__body__smile .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.917rem 0.417rem 0.833rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.167rem;
            }
.wall_post__body {
    font-size: .6rem;
    text-align: center;
    padding: 3.2em;
    margin: 0 0 0.2em;
    font-weight: 700;
    word-wrap: break-word;
box-shadow: 0rem 0rem 0.125rem 0.125rem;
}

           .wall_post__footer .btn {
    box-shadow: 0rem 0rem 0.292rem 0rem #000 !important;
    position: relative;
    top: 0;
    left: -0.833rem;
    border-radius: 0 0.583rem 0 0.583rem;
    transition: transform 0.3s ease;
}

.wall_post__footer .btn:hover {
    animation: rotate 1s linear infinite; /* دوران دائم عند التحويل */
}

@keyframes rotate {
    from {
        transform: rotate(0deg); /* الزاوية الأولى (0 درجة) */
    }
    to {
        transform: rotate(360deg); /* الزاوية الثانية (360 درجة) */
    }
}


            .wall_post__footer {
                HEIGHT: 40PX;
            }

            .wall_post__footer {
                padding: 0.2em;
                height: 1.75rem !important;
                width: 95%;
                margin-left: 0.208rem;
                box-shadow: 0rem 0rem 0.125rem 0.125rem;
                border-radius: 0 0.583rem 0 0.583rem;
                margin-bottom: 0.833rem;
                position: relative;
                top: 0.708rem;
            }

            .wall_post__body__comments .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.208rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.167rem;
            }

            .wall_post__body__comments.btn-primary {
                background: #000!important;
                box-shadow: none !important;
            }

            .wall_post__body__smile {
                position: relative;
                background-size: cover;
                background-repeat: no-repeat;
                margin-top: .1rem!important;
                border-radius: 2.083rem;
                margin-left: -0.208rem!important;
                margin-right: 0.5rem!important;
            }

            .wall_post__body__comments,.wall_post__body__smile {
                width: 1.167rem;
                height: 1.167rem;
                padding: 0!important;
                box-shadow: 0 0 0.417rem 0 #000 !important;
                border-radius: 0.125rem;
                margin-top: -0.042rem !important;
            }

            .wall_post__body__comments {
                margin: -0.042rem!important;
                top: .1rem!important;
                left: 6.875rem!important;
                border: 0 solid #fff!important;
            }

            .wall_post__body__remove {
                left: 0.208rem!important;
            }

            button.wall_post__body__remove.fr.btn.btn-danger.fa.fa-times {
                margin-top: 0.333rem;
            }

            .bakdadi1995Programmer {
                display: none;
            }

            <a {
                display: none;
            }

         
            .chat_pane__user_item.hidden .status.state_active {
                background-color: #2196f3;
            }

            .wall_post__body__smile .count {
                position: absolute;
                bottom: -0.458rem;
                right: .5rem;
                font-size: 0.417rem;
                color: #fff;
                border-radius: 0.208rem;
                border: 0.083rem solid #03add8;
                background: #03add8;
                width: 0.917rem;
                height: 0.625rem;
                left: 0.333rem;
            }

--------------------------------

#chat__footer__menu .badge {
    background-color: #dc3545;
    margin-top: -2px;
    font-size: 10px;
    margin-left: 2px;
    height: 15px;
}
.badge {
    display: inline-block;
    min-width: .4166666667rem;
    padding: .1em .5em;
    font-size: .5rem;
    font-weight: 700;
    line-height: 1;
    color: #efe4e4;
    white-space: nowrap;
    vertical-align: middle;
    background-color: #777;
    border-radius: .4166666667rem;
    margin-top: -.9em;
    border: .0416666667rem solid #000;
}
#chat__footer {
      background-color: #fffbfb !important;
}
#mic-speakers {
    text-align: center;
        background-color: #330832!important;
    border-radius: 0rem;
}
#mic-speakers {
    background-repeat: revert-layer;
    margin-left: 2px;
    color: #fff;
    border: 1px solid #f9f9f9!important;
    width: 100%;
}
#mic-speakers .mic-speakers--item .fa-microphone:before {
    position: absolute;
    top: .0rem;
    margin-left: -.8rem;
    width: 1.6rem;
    height: 1.6rem;
    border-radius: 50%;
    color: var(--mic-color);
    font-size: 1.1rem;
}
#mic-speakers .fa-microphone:before {
    position: absolute;
    content: "";
    top: 0px;
    margin-top: 0;
    margin-left: -22px;
    width: 45px;
    height: 45px;
    border-radius: 50px;
    background: url(https://l.top4top.io/p_2690q8wlt1.gif)100% 100% / 104% 106% no-repeat!important;
    border: 0.167rem solid #efe4e4;
}
#mic-speakers #mic-speakers--mute {
    position: relative;
    width: 1.875rem;
    height: 1.875rem;
    border-radius: 50%;
    color: #000;
    display: inline-grid;
    font-size: 1.1rem;
    margin: .041rem .5rem .041rem .2rem;
    border: .125rem solid #efe4e4;
    cursor: pointer;
    vertical-align: middle;
    text-align: center;
}
#mic-speakers #mic-speakers--mute .fa:before {
  
    color: #d9dbe1;
    
}

.public_message.public_message_ad {
      background: #0000001b!important;
    outline: 1px dashed #717d95;
    outline-offset: -5px;
    background-size: auto;
    background-position: 100% 0%;
}

.public_message.linen {
          background: #0000001b;
    outline: 1px dashed #717d95;
    outline-offset: -5px;
    background-size: auto;
    background-position: 100% 0%;
}
.chat_pane__room_item--inline {
    position: relative;
    padding: 0px;
    top: -3px;
}
.user_profile__body__avatar {
    border-radius: 50%;
}
img.state_active {
    border-radius: 50%;
}
.chat_box__footer {
    background: #fff;
}
#chat__body__messages_container .fa-comment:before {
    content: "\f219";
    background-image: repeating-linear-gradient(
-45deg
,#000000 3%, rgb(255, 0, 0) 8.875%, #000000 14.75%, rgb(255, 0, 0) 20.625%, #FFD700 26.5%, rgb(255, 0, 0) 32.375%,#FFD700 38.25%, rgb(255, 0, 0) 44.125%, #FFD700 50%);
    animation-duration: 4s;
    text-shadow: 0 0px 5px #fdfefe;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 100%;
    background-position: 0 0;
    -webkit-animation: nameWave 3s linear infinite normal;
    animation: nameWave 3s linear infinite normal;
}




@keyframes nameWave {
0% {
    background-position: 0 0;
}
100% {
    background-position: 100% 0;
}
}

li.border.border-color.btn-primary.chat__footer__menu__item {
    background-image: url(https://www.chabab-jo.com/images/mic_bg.gif);
    background-size: cover !important;
	border-radius: 1px !important;
}
/* تحسينات الكود */

/* قاعدة الصورة في الرسالة */
#chat__body__wall_creator_pane .chat_pane__container__posts .chat_pane__container__post .grade {
    display: inline-block;
    width: 30px;
    text-align: center;
    font-size: 26px;
    color: #ffffff;
    background-image: url(https://flyclipart.com/thumb2/winner-ribbon-transparent-473744.png);
    background-size: 103% 120%;
    background-repeat: no-repeat;
}
.chat__footer__menu__item.unread {
    background-color: orange;
    padding-right: 1px;
    width: 60px !important;
    background-image: url(https://k.top4top.io/p_1871wwqvi1.gif)!important;
}
/* حالة نشطة للمستخدم */
.chat_pane__user_item.hidden .status.state_active {
    background-color: #2196f3;
}


/* عداد التفاعلات في الرسالة */
.wall_post__body__smile .count {
    position: absolute;
    bottom: -11px;
    right: .5rem;
    font-size: 10px;
    color: #fff;
    border-radius: 5px;
    border: 2px solid #03add8;
    background: #03add8;
    width: 22px;
    height: 15px;
    left: 8px;
}

/* حالة الملف الشخصي */
.user_profile__body__status {
    width: 80%;
    padding: 10px;
    text-align: center;
    outline-offset: -6px;
    background: hsl(0deg 0% 0% / 0%);
    border-radius: 5px;
    border: 1px solid #2c2c2c;
    box-shadow: 8px 3px 5px -3px #000;
    margin-bottom: 24px;
    margin-left: 40px;
    overflow: auto;
    height: 79px; /* تم إزالة السطر المكرر */
    font-size: small;
}

/* عنوان الرسائل */
h3.label.label-primary.chat_pane__header__title {
    color: #fff;
    font-size: .6rem;
    font-weight: 700;
    word-wrap: break-word;
    text-align: center;
    padding: 4px;
    margin: 0 0 20px;
    border-radius: 59px 0 68px 0;
    box-shadow: 0 5px 25px #fff;
    width: 122px;
    margin-left: 79px;
    background: linear-gradient( -45deg , #000, #000, #8f8157, #000);
    background-size: 400% 400%;
    animation: abqsh 10s ease infinite;
}

/* حاوية الرسائل بحدود */
.chat_pane__container.border {
    padding: 1px;
    border-radius: 10px;
    box-shadow: 3px 3px 40px #000;
    border: 3px solid hsla(0,0%,100%,.8588235294117647);
    background: hsla(0,0%,100%,.8588235294117647);
background: #f8f9fa;
}

.public_message__avatar img {
    border: 1px solid #dedbdb;
    padding: 1px;
    border-radius: 50%; /* تحديد الشكل الدائري */
}

